apiVersion: apps/v1
kind: Deployment
metadata:
  name: wn-pod
  labels:
    app.kubernetes.io/name: wn
spec:

  template:
    metadata:
      labels:
        app.kubernetes.io/name: wn
    spec:
      priorityClassName: system-node-critical
      affinity:
        #podAntiAffinity:
          # requiredDuringSchedulingIgnoredDuringExecution:
          # - labelSelector:
          #     matchExpressions:
          #     - key: app.kubernetes.io/name
          #       operator: NotIn
          #       values:
          #       - master
          #       - schedd
          #       - wn
          #  topologyKey: kubernetes.io/hostname
        {{- if .Values.cvmfs.enabled }}
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                {{- if .Values.cvmfs.enabled }}
                - cvmfs
                {{- end }}
            topologyKey: kubernetes.io/hostname
        {{- end }}
      #hostNetwork: true
      {{- if .Values.ttsCache.enabled }}
      serviceAccountName: tts-account
      {{- end }}
      containers:
      {{- if .Values.squid.enabled }}
      - name: squid
        image: "{{ .Values.squid.image }}:{{ .Values.squid.tag }}"
        imagePullPolicy: {{ .Values.squid.pullPolicy }}
        command:
        - /launch_squid.sh
      {{- end }}
      {{- if .Values.ttsCache.enabled }}
      - name: tts
        imagePullPolicy: "{{ .Values.ttsCache.pullPolicy }}"
        image: "{{ .Values.ttsCache.image }}:{{ .Values.ttsCache.tag }}"
        args:
          - --get-proxy
          - --period
          - "120"
          - "--config"
          - "/app/.config.yaml"
        resources:
          limits:
            memory: "500M"
            cpu: "100m"
        volumeMounts:
          - name: proxydir
            mountPath: /root/proxy
      {{- end }}
      - name: wn
        {{- if .Values.cvmfs.enabled }}
        livenessProbe:
          exec:
            command:
            - ls
            - /cvmfs/*
          initialDelaySeconds: 30
          periodSeconds: 600
        {{- end }}
        securityContext:
          capabilities:
            add:
              - SYS_ADMIN
          privileged: true
        resources:
          requests:
            memory: {{ .Values.wn.requests.memory }}
            cpu: {{ .Values.wn.requests.cpu }}
        imagePullPolicy: {{ .Values.wn.image.pullPolicy }}
        image: "{{ .Values.wn.image.name }}:{{ .Values.wn.image.tag | default .Chart.AppVersion }}"
        env:
        - name: CONDOR_HOST 
          value: "{{ .Values.master.publicIP }}"
        - name: PROXY_CACHE 
          value: "{{ .Values.proxyCacheHost }}:{{ .Values.proxyCachePort }}"
        - name: CCB_ADDRESS
          value:  "{{ .Values.master.publicIP }}:{{ .Values.master.service.nodePort }}"
        - name: SLOT_TYPE_1
          value: "{{ .Values.wn.slotType }}"
        - name: NUM_CPUS
          value: "{{ .Values.wn.siteConfCMS.numCPUS }}"
        volumeMounts:
          - name: cgroup
            mountPath: /sys/fs/cgroup
          - mountPath: "/etc/condor/config.d"
            name: configd
          - name: clustersecret
            mountPath: /etc/pwd
          - name: mapfile
            mountPath: /home/uwdir/
          {{- if .Values.wn.persistentVolume.pvc.name }}
          - name: "{{ .Values.wn.persistentVolume.pvc.name }}"
            mountPath: "{{ .Values.wn.persistentVolume.pvc.mountPath }}"
          {{- end }}
          {{- if .Values.cvmfs.enabled }}
          - name: cvmfs
            mountPath: "/cvmfs"
            #mountPropagation: Bidirectional
          {{- end }}
          {{- if .Values.wn.siteConfCMS.enabled }}
          {{- range  .Values.wn.siteConfCMS.files }}
          - name: {{ .name }}
            mountPath: /etc/cvmfs/SITECONF/{{ .path }}
          {{- end }}
          {{- end }}
          {{- if .Values.ttsCache.enabled }}
          - name: proxydir
            mountPath: /root/proxy
          {{- end }}
      volumes:
      - name: configd
        configMap:
          name: wnconfigd
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      - name: clustersecret
        secret:
          secretName: clustersecret
          defaultMode: 256
      - name: mapfile
        configMap:
          name: mapfile
      {{- if .Values.cvmfs.enabled }}
      - name: cvmfs
        hostPath:
          path: /cvmfs
          type: Directory
      {{- end }}
      {{- if .Values.wn.persistentVolume.pvc.name  }}
      - name: {{ .Values.wn.persistentVolume.pvc.name  }}
        persistentVolumeClaim:
          claimName: {{ .Values.wn.persistentVolume.pvc.name }}
      {{- end }}
      {{- if .Values.ttsCache.enabled }}
      - name: proxydir
        emptyDir: {}
      {{- end }}
      {{- if .Values.wn.siteConfCMS.enabled }}
      {{- range  .Values.wn.siteConfCMS.files }}
      - name: {{ .name }}
        configMap:
          name: {{ .name }}
      {{- end }}
      {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: wn

  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.wn.replicas}}
  {{- end }}