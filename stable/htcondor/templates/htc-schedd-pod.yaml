{{- if .Values.htcSchedd.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: schedd-pod
  labels:
    app.kubernetes.io/name: schedd-pod
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: schedd
    spec:
      affinity:
{{- if .Values.htcSchedd.nodeSelector }}
{{ .Values.htcSchedd.nodeSelector | indent 8 }}
{{- end }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - schedd
            topologyKey: kubernetes.io/hostname 
      hostNetwork: true
      {{- if .Values.ttsCache.enabled }}
      serviceAccountName: tts-account
      {{- end }}
      containers:
      {{- if .Values.ttsCache.enabled }}
      - name: tts
        imagePullPolicy: "{{ .Values.ttsCache.pullPolicy }}"
        image: "{{ .Values.ttsCache.image }}:{{ .Values.ttsCache.tag }}"
        args:
          - --get-proxy
          - --period
          - "120"
          - "--config"
          - "/app/.config.yaml"
        resources:
          limits:
            memory: "500M"
            cpu: "100m"
        volumeMounts:
          - name: proxydir
            mountPath: /root/proxy
      {{- end }}
      - name: schedd
        imagePullPolicy: {{ .Values.htcSchedd.pullPolicy }}
        args:
        - schedd 
        env:
        - name: CONDOR_HOST 
          value:  "{{ .Values.condorHost }}"
        - name: PROXY_CACHE 
          value: "{{ .Values.proxyCacheHost }}:{{ .Values.proxyCachePort }}"
        - name: NETWORK_INTERFACE
          value:  "{{ .Values.htcSchedd.networkInterface}}"
        - name: LOWPORT
          value: "{{ .Values.htcSchedd.lowPort}}"
        - name: HIGHPORT
          value: "{{ .Values.htcSchedd.highPort }}"
        - name: SEC_DAEMON_AUTHENTICATION_METHODS
          value: CLAIMTOBE
        - name: SEC_CLIENT_AUTHENTICATION_METHODS
          value: CLAIMTOBE
        - name: SEC_NEGOTIATOR_AUTHENTICATION_METHODS
          value: CLAIMTOBE
        - name: SEC_ADVERTISE_STARTD_AUTHENTICATION_METHODS
          value: CLAIMTOBE
        - name: CONDOR_DAEMON_LIST
          value: COLLECTOR, MASTER, NEGOTIATOR, SCHEDD, STARTD
        securityContext:
          capabilities:
            add:
            - CAP_SYS_ADMIN
          privileged: true
        image: "{{ .Values.htcSchedd.image }}:{{ .Values.htcSchedd.tag }}"
        livenessProbe:
          exec:
            command:
            - voms-proxy-info
            - --file
            - /root/proxy/gwms_proxy
            - --exists
          initialDelaySeconds: 300
          periodSeconds: 600
        volumeMounts:
        - mountPath: "{{ .Values.htcSchedd.persistence.mountPath }}"
          name: myspool
        # TODO: implement configMap for mapfile
        - mountPath: "/home/uwdir"
          name: uwdir
{{- if .Values.ttsCache.enabled }}
        - name: proxydir
          mountPath: /root/proxy
        - name: config
          mountPath: "/app"
{{- end }}
      volumes:
{{- if .Values.ttsCache.enabled }}
      - name: proxydir
        emptyDir: {}
      - name: config
        configMap:
          name: ttsconfig
{{- end }}
      - name: myspool
        persistentVolumeClaim:
          claimName: schedd-claim
      - name: uwdir
        hostPath:
          path: /tmp/uwdir
  selector:
    matchLabels:
      app.kubernetes.io/name: schedd

  replicas: 1
{{- end }}